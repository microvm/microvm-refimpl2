package uvm.comminsts

import uvm._

case class CommInst(val id: Int, val name: Option[String], val isTerminator: Boolean) extends Identified

object CommInsts extends SimpleNamespace[CommInst] {

  private def commInst(id: Int, name: String, isTerminator: Boolean = false) {
    val ci = CommInst(id, Some(name), isTerminator)
    add(ci)
  }

  commInst(0x201, "@uvm.new_stack")
  commInst(0x202, "@uvm.kill_stack")
  commInst(0x203, "@uvm.thread_exit", isTerminator = true)
  commInst(0x204, "@uvm.current_stack")
  commInst(0x205, "@uvm.set_threadlocal")
  commInst(0x206, "@uvm.get_threadlocal")

  commInst(0x211, "@uvm.tr64.is_fp")
  commInst(0x212, "@uvm.tr64.is_int")
  commInst(0x213, "@uvm.tr64.is_ref")
  commInst(0x214, "@uvm.tr64.from_fp")
  commInst(0x215, "@uvm.tr64.from_int")
  commInst(0x216, "@uvm.tr64.from_ref")
  commInst(0x217, "@uvm.tr64.to_fp")
  commInst(0x218, "@uvm.tr64.to_int")
  commInst(0x219, "@uvm.tr64.to_ref")
  commInst(0x21a, "@uvm.tr64.to_tag")

  commInst(0x220, "@uvm.futex.wait")
  commInst(0x221, "@uvm.futex.wait_timeout")
  commInst(0x222, "@uvm.futex.wake")
  commInst(0x223, "@uvm.futex.cmp_requeue")

  commInst(0x230, "@uvm.kill_dependency")
  
  commInst(0x240, "@uvm.native.pin")
  commInst(0x241, "@uvm.native.unpin")
  commInst(0x242, "@uvm.native.expose")
  commInst(0x243, "@uvm.native.unexpose")
  commInst(0x244, "@uvm.native.get_cookie")
  
  commInst(0x250, "@uvm.meta.id_of")
  commInst(0x251, "@uvm.meta.name_of")
  commInst(0x252, "@uvm.meta.load_bundle")
  commInst(0x253, "@uvm.meta.load_hail")
  
  commInst(0x254, "@uvm.meta.new_cursor")
  commInst(0x255, "@uvm.meta.next_frame")
  commInst(0x256, "@uvm.meta.copy_cursor")
  commInst(0x257, "@uvm.meta.close_cursor")
  
  commInst(0x258, "@uvm.meta.cur_func")
  commInst(0x259, "@uvm.meta.cur_func_ver")
  commInst(0x25a, "@uvm.meta.cur_inst")
  commInst(0x25b, "@uvm.meta.dump_keepalives")
  
  commInst(0x25c, "@uvm.meta.pop_frames_to")
  commInst(0x25d, "@uvm.meta.push_frame")
  
  commInst(0x25e, "@uvm.meta.enable_watchPoint")
  commInst(0x25f, "@uvm.meta.disable_watchPoint")
  
  commInst(0x260, "@uvm.meta.set_trap_handler")

  // Common instructions for IR builder API here:
  /// GEN:BEGIN:IRBUILDER_COMMINSTS
  commInst(0x300, "@uvm.irbuilder.new_bundle")
  commInst(0x301, "@uvm.irbuilder.load_bundle_from_node")
  commInst(0x302, "@uvm.irbuilder.abort_bundle_node")
  commInst(0x303, "@uvm.irbuilder.get_node")
  commInst(0x304, "@uvm.irbuilder.get_id")
  commInst(0x305, "@uvm.irbuilder.set_name")
  commInst(0x306, "@uvm.irbuilder.new_type_int")
  commInst(0x307, "@uvm.irbuilder.new_type_float")
  commInst(0x308, "@uvm.irbuilder.new_type_double")
  commInst(0x309, "@uvm.irbuilder.new_type_uptr")
  commInst(0x30a, "@uvm.irbuilder.set_type_uptr")
  commInst(0x30b, "@uvm.irbuilder.new_type_ufuncptr")
  commInst(0x30c, "@uvm.irbuilder.set_type_ufuncptr")
  commInst(0x30d, "@uvm.irbuilder.new_type_struct")
  commInst(0x30e, "@uvm.irbuilder.new_type_hybrid")
  commInst(0x30f, "@uvm.irbuilder.new_type_array")
  commInst(0x310, "@uvm.irbuilder.new_type_vector")
  commInst(0x311, "@uvm.irbuilder.new_type_void")
  commInst(0x312, "@uvm.irbuilder.new_type_ref")
  commInst(0x313, "@uvm.irbuilder.set_type_ref")
  commInst(0x314, "@uvm.irbuilder.new_type_iref")
  commInst(0x315, "@uvm.irbuilder.set_type_iref")
  commInst(0x316, "@uvm.irbuilder.new_type_weakref")
  commInst(0x317, "@uvm.irbuilder.set_type_weakref")
  commInst(0x318, "@uvm.irbuilder.new_type_funcref")
  commInst(0x319, "@uvm.irbuilder.set_type_funcref")
  commInst(0x31a, "@uvm.irbuilder.new_type_tagref64")
  commInst(0x31b, "@uvm.irbuilder.new_type_threadref")
  commInst(0x31c, "@uvm.irbuilder.new_type_stackref")
  commInst(0x31d, "@uvm.irbuilder.new_type_framecursorref")
  commInst(0x31e, "@uvm.irbuilder.new_type_irnoderef")
  commInst(0x31f, "@uvm.irbuilder.new_funcsig")
  commInst(0x320, "@uvm.irbuilder.new_const_int")
  commInst(0x321, "@uvm.irbuilder.new_const_int_ex")
  commInst(0x322, "@uvm.irbuilder.new_const_float")
  commInst(0x323, "@uvm.irbuilder.new_const_double")
  commInst(0x324, "@uvm.irbuilder.new_const_null")
  commInst(0x325, "@uvm.irbuilder.new_const_seq")
  commInst(0x326, "@uvm.irbuilder.new_global_cell")
  commInst(0x327, "@uvm.irbuilder.new_func")
  commInst(0x328, "@uvm.irbuilder.new_func_ver")
  commInst(0x329, "@uvm.irbuilder.new_exp_func")
  commInst(0x32a, "@uvm.irbuilder.new_bb")
  commInst(0x32b, "@uvm.irbuilder.new_nor_param")
  commInst(0x32c, "@uvm.irbuilder.new_exc_param")
  commInst(0x32d, "@uvm.irbuilder.new_inst_res")
  commInst(0x32e, "@uvm.irbuilder.add_dest")
  commInst(0x32f, "@uvm.irbuilder.add_keepalives")
  commInst(0x330, "@uvm.irbuilder.new_binop")
  commInst(0x331, "@uvm.irbuilder.new_cmp")
  commInst(0x332, "@uvm.irbuilder.new_conv")
  commInst(0x333, "@uvm.irbuilder.new_select")
  commInst(0x334, "@uvm.irbuilder.new_branch")
  commInst(0x335, "@uvm.irbuilder.new_branch2")
  commInst(0x336, "@uvm.irbuilder.new_switch")
  commInst(0x337, "@uvm.irbuilder.add_switch_dest")
  commInst(0x338, "@uvm.irbuilder.new_call")
  commInst(0x339, "@uvm.irbuilder.new_tailcall")
  commInst(0x33a, "@uvm.irbuilder.new_ret")
  commInst(0x33b, "@uvm.irbuilder.new_throw")
  commInst(0x33c, "@uvm.irbuilder.new_extractvalue")
  commInst(0x33d, "@uvm.irbuilder.new_insertvalue")
  commInst(0x33e, "@uvm.irbuilder.new_extractelement")
  commInst(0x33f, "@uvm.irbuilder.new_insertelement")
  commInst(0x340, "@uvm.irbuilder.new_shufflevector")
  commInst(0x341, "@uvm.irbuilder.new_new")
  commInst(0x342, "@uvm.irbuilder.new_newhybrid")
  commInst(0x343, "@uvm.irbuilder.new_alloca")
  commInst(0x344, "@uvm.irbuilder.new_allocahybrid")
  commInst(0x345, "@uvm.irbuilder.new_getiref")
  commInst(0x346, "@uvm.irbuilder.new_getfieldiref")
  commInst(0x347, "@uvm.irbuilder.new_getelemiref")
  commInst(0x348, "@uvm.irbuilder.new_shiftiref")
  commInst(0x349, "@uvm.irbuilder.new_getvarpartiref")
  commInst(0x34a, "@uvm.irbuilder.new_load")
  commInst(0x34b, "@uvm.irbuilder.new_store")
  commInst(0x34c, "@uvm.irbuilder.new_cmpxchg")
  commInst(0x34d, "@uvm.irbuilder.new_atomicrmw")
  commInst(0x34e, "@uvm.irbuilder.new_fence")
  commInst(0x34f, "@uvm.irbuilder.new_trap")
  commInst(0x350, "@uvm.irbuilder.new_watchpoint")
  commInst(0x351, "@uvm.irbuilder.new_wpbranch")
  commInst(0x352, "@uvm.irbuilder.new_ccall")
  commInst(0x353, "@uvm.irbuilder.new_newthread")
  commInst(0x354, "@uvm.irbuilder.new_swapstack_ret")
  commInst(0x355, "@uvm.irbuilder.new_swapstack_kill")
  commInst(0x356, "@uvm.irbuilder.set_newstack_pass_values")
  commInst(0x357, "@uvm.irbuilder.set_newstack_throw_exc")
  commInst(0x358, "@uvm.irbuilder.new_comminst")
  /// GEN:END:IRBUILDER_COMMINSTS
}
