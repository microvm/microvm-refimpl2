// require "primitives.uir"

.global @g_i64 <@i64>

.funcdef @plus_one VERSION %v1 <@i_i> {
    %entry(<@i64> %n):
        %rv = ADD <@i64> %n @I64_1
        RET %rv
}

.expose @plus_one_native = @plus_one #DEFAULT @I64_0

.funcdef @trapper VERSION %v1 <@i_i> {
    %entry(<@i64> %n):
        %v1 = [%trap1] TRAP <@i64> KEEPALIVE (%n)
        [%trap2] TRAP <> KEEPALIVE (%v1)
        COMMINST @uvm.thread_exit
}

.typedef @s1 = struct <@i64 @double>
.const @S1 <@s1> = {@I64_6 @D_7}

.typedef @a1 = array <@i32 3>
.const @A1 <@a1> = {@I32_2 @I32_3 @I32_4}

.typedef @hyb = hybrid <@i64 @i8>
