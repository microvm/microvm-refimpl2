.typedef @i8  = int<8>
.typedef @i16 = int<16>
.typedef @i32 = int<32>
.typedef @i64 = int<64>
.typedef @void = void

.typedef @ii8 = iref<@i8>
.typedef @iii8 = iref<@ii8>

.funcsig @foo = @void ()

.funcsig @bar = @i64 (@i32 @i16)

.funcsig @baz = @i32 (@i32 @iii8)

.funcsig @sig_fs = @void (@i32)

.typedef @sig_t = funcref<@sig_fs>

.funcsig @signal_sig = @sig_t (@i32 @sig_t)
.funcdecl @signal <@signal_sig>

.const @zero <@i32> = 0

.funcdef @main VERSION %v1 <@baz> {
    %entry(<@i32> %argc <@iii8> %argv):
        %add = ADD <@i32> %argc @zero
        RET @zero
}

.const @zero64 <@i64> = 0

.expose @main_native = @main #DEFAULT @zero64
